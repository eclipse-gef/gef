/*******************************************************************************
 * Copyright (c) 2019 itemis AG and others.
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * SPDX-License-Identifier: EPL-2.0
 *
 * Contributors:
 *     Zoey Gerrit Prigge (itemis AG) - initial API and implementation (bug #542663)
 *
 *******************************************************************************/
grammar org.eclipse.gef.dot.internal.language.DotFontName hidden(OTHER_WS, SPACE)

import "http://www.eclipse.org/gef/dot/internal/language/DotFontName"
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

FontName:
	PostScriptFontName | PangoFontName;

PostScriptFontName:
	alias=PostScriptAlias;

/*
 * Due to a dangling NFA state, we cannot move the final family into a datatype rule.
 * This results in the case of multiple sequential spaces in the final family name to be unrecognized.
 * The grammar will still parse, however.
 */
PangoFontName:
	=>(
		(families+=PangoFamily ',' )+
			finalFamily+=(/* SPACE | */INT|NAME|PSALIAS|StyleOptionString)*
			finalFamily+=(NAME|PSALIAS)
		| finalFamily+=(INT|NAME|PSALIAS|StyleOptionString)
			finalFamily+=(/* SPACE | */INT|NAME|PSALIAS|StyleOptionString)*
			finalFamily+=(NAME|PSALIAS)
		| finalFamily+=NAME
	)
	| =>(
		(families+=PangoFamily ',' )*
			finalFamily+=(/* SPACE | */INT|NAME|PSALIAS|StyleOptionString)*
			finalFamily+=(INT|NAME|PSALIAS)
			styleOptionsList+=StyleOptionsElement*
			(styleOptionsList+=StyleOptionsElement|INT)
	)
	| {PangoFontName} =>(
		(families+=PangoFamily ',')*
			styleOptionsList+=StyleOptionsElement*
			INT?
	);

PangoFamily:
	(INT|NAME|PSALIAS|StyleOptionString|SPACE)*;

StyleOptionsElement:
	StyleOption | VariantOption | WeightOption | StretchOption | GravityOption;

StyleOption:
	style=Style;

VariantOption:
	variant=Variant;

WeightOption:
	weight=Weight;

StretchOption:
	stretch=Stretch;

GravityOption:
	gravity=Gravity;

/*
 * This grammar is case insensitive (including terminal symbols), hence lexing is done on a lowercase string!
 */

Style returns Style:
	STYLE_KEY;

terminal STYLE_KEY:
	"roman" | "oblique" | "italic";

Variant returns Variant:
	VARIANT_KEY;

terminal VARIANT_KEY:
	"small-caps";

Weight returns Weight:
	WEIGHT_KEY;

terminal WEIGHT_KEY:
	"regular" | "thin" | "ultra-light" | "extra-light" | "light" | "semi-light" | "demi-light"
	| "book" | "medium" | "semi-bold" | "demi-bold" | "bold" | "ultra-bold" | "extra-bold"
	| "heavy" | "black" | "ultra-heavy" | "extra-heavy" | "ultra-black" | "extra-black";

Stretch returns Stretch:
	STRETCH_KEY;

terminal STRETCH_KEY:
	"ultra-condensed" | "extra-condensed" | "condensed" | "semi-condensed"
	| "semi-expanded" | "expanded" | "extra-expanded" | "ultra-expanded";

Gravity returns Gravity:
	GRAVITY_KEY;

terminal GRAVITY_KEY:
	"not-rotated" | "south" |
	"upside-down" | "north" |
	"rotated-left" | "east" |
	"rotated-right" | "west";

PostScriptAlias returns PostScriptFontAlias:
	PSALIAS;

terminal PSALIAS:
	"avantgarde-book" | "avantgarde-bookoblique" | "avantgarde-demi" | "avantgarde-demioblique" | "bookman-demi" | "bookman-demiitalic" |
	"bookman-light" | "bookman-lightitalic" | "courier" | "courier-bold" | "courier-boldoblique" | "courier-oblique" | "helvetica" |
	"helvetica-bold" | "helvetica-boldoblique" | "helvetica-narrow" | "helvetica-narrow-bold" | "helvetica-narrow-boldoblique" |
	"helvetica-narrow-oblique" | "helvetica-oblique" | "newcenturyschlbk-bold" | "newcenturyschlbk-bolditalic" | "newcenturyschlbk-italic" |
	"newcenturyschlbk-roman" | "palatino-bold" | "palatino-bolditalic" | "palatino-italic" | "palatino-roman" | "symbol" | "times-bold" |
	"times-bolditalic" | "times-italic" | "times-roman" | "zapfchancery-mediumitalic" | "zapfdingbats";

StyleOptionString:
	STYLE_KEY | VARIANT_KEY | WEIGHT_KEY | STRETCH_KEY | GRAVITY_KEY;

terminal SPACE:
	(' ');

terminal OTHER_WS:
	('\t' | '\r' | '\n' | '\f');

terminal INT:
	(('0'..'9')+ ('.' ('0'..'9')*)? | '.' ('0'..'9')+) "px"?;

terminal NAME:
	(!(SPACE | OTHER_WS | ','))+;
