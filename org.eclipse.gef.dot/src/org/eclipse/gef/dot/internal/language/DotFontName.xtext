/*******************************************************************************
 * Copyright (c) 2019 itemis AG and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     Zoey Gerrit Prigge (itemis AG) - initial API and implementation (bug #542663)
 *     
 *******************************************************************************/
grammar org.eclipse.gef.dot.internal.language.DotFontName hidden(OTHER_WS, SPACE)

import "http://www.eclipse.org/gef/dot/internal/language/DotFontName"
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

FontName:
	PostScriptFontName | PangoFontName;

PostScriptFontName:
	alias=PostScriptAlias;

/*
 * Due to a dangling NFA state, we cannot move the final family into a datatype rule.
 * This results in the case of multiple sequential spaces in the final family name to be unrecognized.
 * The grammar will still parse, however.
 */
PangoFontName:
	=>(
		(families+=PangoFamily ',' )+ 
			finalFamily+=(/* SPACE | */INT|NAME|PSALIAS|StyleOptionString)* 
			finalFamily+=(NAME|PSALIAS) 
		| finalFamily+=(INT|NAME|PSALIAS|StyleOptionString) 
			finalFamily+=(/* SPACE | */INT|NAME|PSALIAS|StyleOptionString)* 
			finalFamily+=(NAME|PSALIAS)
		| finalFamily+=NAME
	)
	| =>(
		(families+=PangoFamily ',' )* 
			finalFamily+=(/* SPACE | */INT|NAME|PSALIAS|StyleOptionString)* 
			finalFamily+=(INT|NAME|PSALIAS) 
			styleOptionsList+=StyleOptionsElement* 
			(styleOptionsList+=StyleOptionsElement|INT)
	) 
	| {PangoFontName} =>(
		(families+=PangoFamily ',')* 
			styleOptionsList+=StyleOptionsElement* 
			INT?
	);

PangoFamily:
	(INT|NAME|PSALIAS|StyleOptionString|SPACE)*;

StyleOptionsElement:
	StyleOption | VariantOption | WeightOption | StretchOption | GravityOption;

StyleOption:
	style=Style;

VariantOption:
	variant=Variant;

WeightOption:
	weight=Weight;

StretchOption:
	stretch=Stretch;

GravityOption:
	gravity=Gravity;
	
Style returns Style:
	STYLE_KEY;

terminal STYLE_KEY:
	"roman" | "oblique" | "italic";

Variant returns Variant:
	VARIANT_KEY;

terminal VARIANT_KEY:
	"small-caps";

Weight returns Weight:
	WEIGHT_KEY;

terminal WEIGHT_KEY:
	"Regular" | "Thin" | "Ultra-Light" | "Extra-Light" | "Light" | "Semi-Light" | "Demi-Light"
	| "Book" | "Medium" | "Semi-Bold" | "Demi-Bold" | "Bold" | "Ultra-Bold" | "Extra-Bold"
	| "Heavy" | "Black" | "Ultra-Heavy" | "Extra-Heavy" | "Ultra-Black" | "Extra-Black";

Stretch returns Stretch:
	STRETCH_KEY;
	
terminal STRETCH_KEY:
	"Ultra-Condensed" | "Extra-Condensed" | "Condensed" | "Semi-Condensed"
	| "Semi-Expanded" | "Expanded" | "Extra-Expanded" | "Ultra-Expanded";

Gravity returns Gravity: 
	GRAVITY_KEY;

terminal GRAVITY_KEY:
	"Not-Rotated" | "South" | 
	"Upside-Down" | "North" | 
	"Rotated-Left" | "East" | 
	"Rotated-Right" | "West";

PostScriptAlias returns PostScriptFontAlias:
	PSALIAS;

terminal PSALIAS:
	 "AvantGarde-Book" | "AvantGarde-BookOblique" | "AvantGarde-Demi" | "AvantGarde-DemiOblique" | "Bookman-Demi" | "Bookman-DemiItalic" | 
	"Bookman-Light" | "Bookman-LightItalic" | "Courier" | "Courier-Bold" | "Courier-BoldOblique" | "Courier-Oblique" | "Helvetica" | 
	"Helvetica-Bold" | "Helvetica-BoldOblique" | "Helvetica-Narrow" | "Helvetica-Narrow-Bold" | "Helvetica-Narrow-BoldOblique" |
	"Helvetica-Narrow-Oblique" | "Helvetica-Oblique" | "NewCenturySchlbk-Bold" | "NewCenturySchlbk-BoldItalic" | "NewCenturySchlbk-Italic" | 
	"NewCenturySchlbk-Roman" | "Palatino-Bold" | "Palatino-BoldItalic" | "Palatino-Italic" | "Palatino-Roman" | "Symbol" | "Times-Bold" | 
	"Times-BoldItalic" | "Times-Italic" | "Times-Roman" | "ZapfChancery-MediumItalic" | "ZapfDingbats";

StyleOptionString:
	STYLE_KEY | VARIANT_KEY | WEIGHT_KEY | STRETCH_KEY | GRAVITY_KEY;
	
terminal SPACE:
	(' ');
	
terminal OTHER_WS:
	('\t' | '\r' | '\n' | '\f');
	
terminal INT:
	(('0'..'9')+ ('.' ('0'..'9')*)? | '.' ('0'..'9')+) "px"?;

terminal NAME:
	(!(SPACE | OTHER_WS | ','))+;
